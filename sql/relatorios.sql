-- Dashboard geral: alunos, cursos, matrículas ativas, receita total gerada com os valores totais na ultima linha
WITH TAB AS ( 
SELECT
	C.ID AS ID_CURSO,
	C.TITULO AS CURSO,
	A.ID AS ID_ALUNO,
	M.ID AS ID_MATRICULA,
	(
		CASE
			WHEN M.ID_STATUS = 1 THEN 1
			ELSE 0
		END
	) AS MATRICULA_ATIVA,
	M.VALOR_PAGO
FROM
	"EDUTECH".DBO.CURSOS C
	LEFT JOIN "EDUTECH".DBO.MATRICULAS M
		ON M.ID_CURSO = C.ID
	LEFT JOIN "EDUTECH".DBO.ALUNOS A
		ON A.ID = M.ID_ALUNO
) -- TABELA QUE LISTA TODOS OS ALUNOS, CURSOS E MATRICULAS
SELECT
	T.CURSO,
	COUNT(T.ID_ALUNO) AS QTD_ALUNOS,
	SUM(T.MATRICULA_ATIVA) AS QTD_MATRICULAS_ATIVAS,
	SUM(T.VALOR_PAGO) AS FATURAMENTO_TOTAL
FROM
	TAB T
GROUP BY
	T.CURSO
UNION ALL
SELECT
	CAST(COUNT(DISTINCT T.ID_CURSO) AS VARCHAR) AS CURSO,
	COUNT(T.ID_ALUNO) AS QTD_ALUNOS,
	SUM(T.MATRICULA_ATIVA) AS QTD_MATRICULAS_ATIVAS,
	SUM(T.VALOR_PAGO) AS FATURAMENTO_TOTAL
FROM
	TAB T
;


-- Cursos com baixa taxa de conclusão (menos de 30% das aulas concluídas)
WITH TAXA_CONCLUSAO AS (SELECT
	C.ID AS ID_CURSO,
	(CAST(SUM(P.TEMPO_ASSISTIDO) AS FLOAT) / C.CARGA_HORARIA * 100)::DECIMAL(10,2) AS PERCENTUAL_CONCLUSAO
FROM
	"EDUTECH".DBO.ALUNOS A
	JOIN "EDUTECH".DBO.MATRICULAS M
		ON M.ID_ALUNO = A.ID
	JOIN "EDUTECH".DBO.CURSOS C
		ON C.ID = M.ID_CURSO
	JOIN "EDUTECH".DBO.PROGRESSO_AULAS P
		ON P.ID_MATRICULA = M.ID
GROUP BY
	C.ID,
	A.ID,
	C.CARGA_HORARIA
HAVING
	(CAST(SUM(P.TEMPO_ASSISTIDO) AS FLOAT) / C.CARGA_HORARIA * 100) < 30
) -- TAXA DE CONCLUSAO DOS CURSOS POR ALUNO
SELECT
	C.TITULO AS CURSO,
	CA.NOME AS CATEGORIA,
	AVG(T.PERCENTUAL_CONCLUSAO)::DECIMAL(10,2) MEDIA_CONCLUSAO
FROM
	"EDUTECH".DBO.CURSOS C
	LEFT JOIN "EDUTECH".DBO.CATEGORIAS CA
		ON CA.ID = C.ID_CATEGORIA
	JOIN TAXA_CONCLUSAO T
		ON T.ID_CURSO = C.ID
GROUP BY
	C.TITULO,
	CA.NOME
ORDER BY
	AVG(T.PERCENTUAL_CONCLUSAO)
;


-- Instrutores mais bem avaliados (média >= 4.5)
SELECT
	I.NOME AS INSTRUTOR,
	I.BIOGRAFIA,
	TO_CHAR(AVG(A.NOTA), 'FM9999999999.00') AS MEDIA_NOTA
FROM
	"EDUTECH".DBO.INSTRUTORES I
	LEFT JOIN "EDUTECH".DBO.CURSOS C
		ON C.ID_INSTRUTOR = I.ID
	LEFT JOIN "EDUTECH".DBO.AVALIACOES A
		ON A.ID_CURSO = C.ID
WHERE
	I.ATIVO = TRUE
GROUP BY
	I.NOME,
	I.BIOGRAFIA
HAVING
	AVG(A.NOTA) >= 4.5
ORDER BY
	I.NOME
;


-- Categorias mais populares
SELECT
	CA.NOME AS CATEGORIA,
	CA.DESCRICAO AS CATEGORIA_DESCRICAO,
	COUNT(M.ID) AS QTD_ALUNOS
FROM
	"EDUTECH".DBO.CATEGORIAS CA
	LEFT JOIN "EDUTECH".DBO.CURSOS C
		ON C.ID_CATEGORIA = CA.ID
	LEFT JOIN "EDUTECH".DBO.MATRICULAS M
		ON M.ID_CURSO = C.ID
GROUP BY
	CA.NOME,
	CA.DESCRICAO
ORDER BY
	COUNT(M.ID) DESC
;


-- Análise temporal: matrículas por mês do ano atual
SELECT
	TO_CHAR(EXTRACT(MONTH FROM M.DATA_MATRICULA), 'FM00') AS MES,
	CAST(EXTRACT(YEAR FROM M.DATA_MATRICULA) AS VARCHAR(4)) AS ANO,
	COUNT(M.ID)
FROM
	"EDUTECH".DBO.MATRICULAS M
WHERE
	EXTRACT(YEAR FROM M.DATA_MATRICULA) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY
	EXTRACT(MONTH FROM M.DATA_MATRICULA),
	EXTRACT(YEAR FROM M.DATA_MATRICULA)
ORDER BY
	EXTRACT(MONTH FROM M.DATA_MATRICULA)
;

